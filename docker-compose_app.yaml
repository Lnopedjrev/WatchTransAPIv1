services:
  web:
    build:
      context: .
      dockerfile: Dockerfile_nginx
    ports:
      - "443:443"
    networks:
      - appnet
    volumes:
      - ./certs:/etc/nginx/certs
    depends_on:
      api:
        condition: service_started

  api:
    build:
      context: .
      dockerfile: Dockerfile_flask1
    secrets:
      - python_secret
    environment:
      - DATABASE_URL=postgres://${PGDATABASE_USERNAME}:${PGDATABASE_PASSWORD}@database:5432/${PGDATABASE_NAME}
      - SECRET_FILE=/run/secrets/python_secret
    expose:
      - "5000"
    volumes:
      - ../logs:/var/log
    networks:
      - appnet
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_DB=${PGDATABASE_NAME}
      - POSTGRES_USER=${PGDATABASE_USERNAME}
      - POSTGRES_PASSWORD=${PGDATABASE_PASSWORD}
    volumes:
      - pgdb:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - appnet
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
networks:
  appnet:
volumes:
  pgdb:
secrets:
  python_secret:
      file: ./env
